{"text":"Module_8 \u2013 Virtual Desktop and Implementing SQL Queries\n8.1 Introduction and Background\nDesktop virtualization is a computing method in which computers categorized as \u201cthin\nclients\u201d are implemented in an environment where the system components are protected from the\nunderlying platforms. (Agrawal) The benefit of desktop virtualization seems to be that the\nefficiencies of central processing can be used in a more practical manner.\nHistorically speaking, in the 1960s, IBM began working on a mainframe system to\naddress the faults of batch processing. Around this time, MIT began seeking proposals from\nhardware companies to assist with its Project MAC: a research endeavor, funded with a DARPA\ngrant, that needed the capability of more than one simultaneous user. Thus, IBM temporarily\nbegan to shift its focus to Project MAC, but eventually lost out to GE, due to their unwillingness\nto commit to a technology that they didn\u2019t see as relevant. (Conroy, \u201cHistory of Virtualization\u201d)\nNevertheless, this prompted IBM to reassess the demand for this technology, and, consequently,\nthey designed the cp-40 mainframe. This product was not sold for consumer use but later\nevolved into the cp-67, the first commercial mainframe to support virtualization.\nMoreover, the cp-67 was run on an operating system called the CP\/CMS (control\nprogram, console monitoring system); the console monitoring system was an interactive OS, and\nthe control program created the virtual machine. Ideally, the CP would run on the mainframe\nand the user would interact with VM that ran on the CMS. Further, up until then, to achieve a\ntime-sharing computer, memory and other system resources were divided up between users.\nVirtual machines are advantageous to the time-sharing OS because of their ability to share\nmainframe resources. VMs also provided better security and overall reliability.\nJumping forward, in the 1990s, Sun Microsystems began Project \u201cStealth.\u201d It was\nrenamed several times, but eventually the company settled on what we now know as Java. Java\nwas created to address the lack of a universal method for running a network of computers, each\nwith distinct operating systems, on the World Wide Web. So, in 1996 the Java Development Kit\n(JDK) was released, allowing applications to be developed for the Java platform. This was\nrevolutionary at the time because there had been no language that allowed someone to write an\napplication once and then run it on any computer, via the JRE (Java Runtime Environment).\nAdditionally, the company VMWare is a succeeding pioneer of Virtualization\ntechnology. Via their YouTube channel, VMSpot, they explain how VMWare was started by\nthree Stanford University students and their professor. Using their research paper as a basis,\nVMWare\u2019s concept was built around an unpopular idea from the 1960s and \u201970s, virtual machine\nmonitors, and the students wanted to try it again with the 1990s tech.\nFurther, the team, consisting of Edouard Bugnion, Scott Devine, Kinshuk Govil and\nMendel Rosenblum (professor), hypothesized that they could run multiple copies of an operating\nsystem on one computer. This theory proved to have legs when the team successfully ran the\nIRIS OS on single machine with a mere 13,000 lines of code. (VMSpot, The Unofficial\u2026) After\nconnecting with Rosenblum\u2019s wife in 1998, the group officially founded VMWare and\nproceeded to acquire a 550 sq-ft space in Palo Alto California. After a few false starts and\nskepticism about their mission, the first Windows VM was started in March of 1998. The\nproduct later went into beta in March of 1999 and the user response was favorable.\nIn addition to those mentioned, there were other miscellaneous forays into the\nvirtualization tech space. For example, in 1987 the company Insignia Solutions demonstrated an emulator called SoftPC, which allowed DOS applications to run on Unix workstations. This was\nimportant because prior to the demonstration, to run MS-DOS, one needed a computer upwards\nof $1500. With SoftPC virtual desktop, all one needed was a $500 Unix terminal to run MS-\nDOS. In 1997, Apple also chimed in with their Virtual PC product, distributed by the company\nConnectix. Virtual PC allowed users to run a copy of Windows on a Mac machine.\nIn essence, virtualization can be used to make applications easier to access remotely.\nIBM paved the way with the cp-67 mainframe, but the field seemed to lose steam in the late \u201970s\nand \u201980s. However, with Sun Microsystem\u2019s release of Java in the early \u201990s followed by\nVMWare\u2019s entry into market, the Virtualization industry saw a resurgence and seems to be here\nto stay.\n8.2 Connect to a virtual desktop\nThe virtual desktop is a powerful and useful tool available to Kennesaw State students but to use\nthem, you must access them with a computer that has certain requirements. You must have\nWindows 7 or higher or Mac OS 10.8, an ethernet cable and display resolution above 800 x 600,\nand if you are on a Mac, you must have Mac AirPort turned off. Another requirement is that you\nmust have VMware downloaded on your device. Downloads of VMware for both Windows and\nMac OS can be found here: https:\/\/virtualowl.kennesaw.edu\/vmware-view-client.php\nNow that you have VMware downloaded on your computer, open the VMware program. After\nVMware is opened, you will see a button that says, \"New Server\" (FIG 8.2.1). After pressing that\nbutton, a pop-up will appear that will ask you to \"Enter the name of the Connection Server\" (FIG\n8.2.2). For the purposes of a 3410 student, you will enter the site \"CSEView.kennesaw.edu\" into\nthe text box then press \"Connect\". After setting up the new server there will be a cloud image\nwith the site name under it that appears on the software (FIG 8.2.1). To connect to that server,\nclick on the cloud icon and it will have a login pop-up where you just must enter your Kennesaw\nState Username (just the username, not the email) and your accompanying password (FIG 8.2.3).\nOn entering a correct username and password, you will be given 2 choices (FIG 8.2.4). For the\npurpose of our class, click on the CS 3410 option, because it includes programs which will be\nhelpful for assignments. After clicking on the choice, it will take you to the virtual desktop. After\nyou are done with using the virtual desktop, you can go to the option tab at the top, scroll over it\nthen click on \"Disconnect and Log Off\" to exit from the virtual desktop (FIG 8.2.5).\nFIG 8.2.1 FIG 8.2.2\nFIG 8.2.3\nFIG 8.2.4 FIG 8.2.5\n8.3 Constructing a Database\nA relational database management system (RDBMS) is a database management system\nbuilt on E.F. Codd\u2019s relational model. An RDBMS has several key components, one of which is\nthe table: these are objects in which the data is stored. Tables consists of rows and columns and\nare essentially a collection of data entries. Further, tables are broken up into smaller units called\nfields, which are columns in a table designed to maintain specific information on all the table\u2019s\nrecords. Consequently, the rows in the table are called records, and these are each individual\nentry that exists in a table; it is a horizontal entity. Likewise, columns are the vertical entries in a\ntable that contain all the information associated with a particular field.\nMoreover, the RDBMS is a basis for SQL and is evident in modern applications. One\nexample of these is MySQL, which is a Swedish product first developed in 1994. Although\nMySQL has paid versions, it is probably most known for being the open-source (free) database.\nAnother popular RDBMS is SQL server, which is a Microsoft creation that primarily works with\nT-SQL and ANSI SQL. SQL Server is primarily for enterprise usage and, unlike MySQL, is not\nopen source. Oracle is another major database management system developed by the Oracle\nCorporation. Oracle begin in 1977, and its strength is its client\/server computing aspect. Last is\nAccess, which is one of Microsoft\u2019s most popular products. This is probably because Access is a\nmore beginner-friendly database than the others mentioned. In addition to being inexpensive, it\nis also powerful and well-suited for smaller projects. Unlike the client-server model utilized by\nOracle, Access is a file-server based relational database management system. With this said,\nwe\u2019ll walk through the steps of constructing a database in MS Access. If Access is closed, the beginning steps are fairly intuitive. However, if a user has Access\nalready open (viewing an existing database for example) then one simply needs to click the\nExternal Data tab at the top:\nThen, click on New Data Source and follow the prompt to import a local xlsx dataset titled\n\u201cImpaired Driving Death Rate by Age and Gender 2012 2014 All States.\u201d The result appears as\nfollows:\nThat is pretty much it to instantiate a database. It should be noted there are other methods of\nconstructing a database: from a high level, the CREATE DATABASE statement can be declared\nvia SQL, relative to which RDBMS is being used. The latter method is beyond the scope of this\nsection.\n8.4 Implementing SQL Queries\nSQL stands for structured query language and, generally, it is used to communicate with\ndatabases. Recognized by ISO and ANSI, SQL is widely used on large databases and even has\nbuilt-in functionality with Oracle and Microsoft products. Generally, a database\u2019s files are interpreted on a server as a standard relational database. Via a user, client programs can then\nmanipulate these data files by means of tables, columns, rows and fields. Client programs do\nthis by sending SQL statements to the server, which then processes and returns result sets to the\nclient program.\nFor clarity, a query is a type of SQL statement that returns data. Informally, an SQL\nquery refers to the SELECT statement; when it is implemented the result is in the form of a table\nthat can be viewed via client software (e.g., Microsoft Access) or used within programming\nlanguages. Essentially, the syntax of the SELECT statement consists of four clauses, which are\nuppercase by convention but don\u2019t have to be.\nFurther, the SELECT clause allows the user to specify a comma-separated list of attribute\nnames that correspond to the columns to be retrieved; an asterisk (*) placed after the clause tells\nSQL to retrieve all the columns. Secondly, with the FROM clause a developer can specify the\ntable name from which to retrieve rows, granted that the data is all found in one table. Next, the\nWHERE clause is used to restrict which rows to retrieve; this is done by specifying a Boolean\npredicate that compares the values of table columns to those of literal values or other columns.\nLastly, the ORDER BY clause provides a way to arrange the display of the rows in the result of\nthe statement. It also should be noted that the second two clauses, WHERE and ORDER BY are\noptional.\nWith that said, the following is an example of an SQL query on a csv file turned database. It\nconsists of a single table titled Impaired Driving Death Rate by Age and Gender 2012 2014 All\nStates, and Microsoft Access is used to analyze it.\n1. First, we retrieve all the data:\nWhich, as can be seen, returns a query identical to the actual table:\n2. Next, we only retrieve male and female deaths from Georgia, Texas and North Carolina\ncirca 2014: (Note: Commas were replaced in the two fields with underscores to prevent errors.) Here\u2019s the\nresult:\n3. Finally, we alphabetize the records using the ORDER BY clause:\nResults shown below:\nMoreover, queries can be implemented imperatively through relational algebra, but the method\nexemplified here is probably most applicable to common usage.\n8.8 Concise Section Summary\nEssentially, the ability to have remote access to an application is at the heart of\nvirtualization. The history of virtual desktops began in 1960 when IBM developed the cp-40\nmainframe, which later evolved into the cp-67. The baton was later passed in the 90\u2019s when Sun\nMicrosystems developed project Stealth, a.k.a Java. Java advanced the field of virtualization in that it allowed an application to run on any machine, independent of the computer it was initially\ndeveloped on. This was followed up in the late nineties, with the founding of VMWare, the\ncompany that\u2019s probably most synonymous with the concept of a virtual machine. VMWare\nallowed multiple copies of an operating system to run on a single computer. Around this time,\nadvancements were also made, leading to what we now know as virtualization.\nFurther, KSU students can access a virtual desktop. The requirements are Windows 7 or\nMac OS 10.8 and the corresponding VMWare download. To begin, a student would enter\nCSEView.kennesaw.edu as the server and connect to that with their credentials. Next, the\nstudent may be prompted with several desktop options: CCSE standard or another for a specific\ncourse; after selecting the appropriate options the user will be taken to a virtual desktop.\nA relational database management system (RDBMS) is a type of relational database\nwhich allows information to be accessed or manipulated. The concept of an RDBMS is based on\nE.F. Codd\u2019s relational model and its main components are: tables, attributes\/fields and their\ncorresponding columns, and rows\/records. SQL, a programming language with a syntax similar\nto that of English, is the accepted method of communicating with a relational database. Popular\nexamples of RDBMS\u2019s are MySQL, Oracle and Microsoft Access.\nSQL is short for structured query language. The most fundamental use of SQL is the\nquery, which is a syntactical statement that reaches out to the server where a database is housed\nand returns data. Typically, a query is composed of several clauses: SELECT, FROM, WHERE\nand ORDER BY. These clauses are built on relational algebra and with them a user can retrieve\nall or only specific portions of a table as they please. "}