{"text":"Module_7: Data Warehouse\n7.1 Introduction and Background\nA data warehouse an element of computing systems considered a core part of many\nbusinesses. They are mainly used for data analysis. A data warehouse combines information\nfrom multiple different places electronically into one single all-inclusive database. For example,\ncompanies may combine sales from the cash registers in a store, online sales, and company-to-\ncompany orders all together as one database. Data warehouses are made for this purpose.\nA data warehouse is a collection of data that is non-updateable, time-variant, integrated,\nand subject-oriented that is used in the support of decision-making management processes and\nbusiness intelligence. The meaning of each of these terms is important for defining what a data\nwarehouse is. The term non-updateable means the information in the data warehouse can be\nrefreshed and loaded from operational systems, but cannot be updated by end users. The term\ntime-variant means the information in the data warehouse contains a dimension of time so that\nthey can be used to study changes and trends. The term integrated refers to the data in the data\nwarehouse are characterized using consistent formats, encoding structures, related\ncharacteristics, and naming conventions gathered from many internal or external systems of\nrecord. The term subject-oriented means the data warehouse is organized around key subjects,\nor higher-level entities, of the enterprise. These major subjects may include students, patients,\nproducts, or time. The data warehouse is not a mere consolidation of all of the operational\ndatabases of an organization. Because of a data warehouse\u2019s focus on business intelligence, time-\nvariant data, and external data, a data warehouse is distinct from a simple database. Data\nwarehousing is a process where organizations build and maintain data assets. Making successful\na data warehouse requires proven practices of data warehousing, strong organizational\ncommitment, sound project management, and making the right technology decisions.\nPutting all this information into one place makes it a lot easier for people to look at and\nevaluate that information. It also makes the jobs of data miners and data analysts much easier,\nsince they can find everything all in one place. It can even help companies realize higher profits\nand make sales a lot easier.\nData warehouses have many other advantages that come from combining data from\nseveral locations into one central database. Data warehouses prevent database isolation\nsometimes caused by running very long queries. Even if source transaction systems fail, the data\nwarehouse will still maintain data history. They also much more consistently provide data to the\nend user, helping to prevent mistakes. A data warehouse can also reorganize all of the\ninformation found to make it much easier to read for analysts and to help them more clearly\nunderstand the content. Reorganizing the information properly can also increase the performance\nfor queries very noticeably. It can even make the queries much easier to construct in many\ninstances.\nAlthough there are many positives to data warehouses, they have their cons. They can\noften make certain employers have to do even more work. This would include gathering data\nfrom other workers and customers to help maintain the warehouse. Another common issue with\ndata warehousing is the cost-to-benefit ratio. This is a huge project for businesses, and it could\ntake up thousands of hours to establish. Sometimes it just isn\u2019t used enough to make up for the\nenormous implementation costs. This is before even mentioning the huge amount of money it\ntakes to maintain the data warehouse and keep it up and going. You also have to update it and\ndo a lot of maintenance for it as your business grows which can be a pain at certain times. The\nprice for a simple one-terabyte data warehouse with around one hundred thousand queries per\nmonth can cost as much as four hundred and sixty-eight thousand dollars a year. For big companies, this might not be a huge deal, but this is definitely not affordable for smaller\nbusinesses. Businesses must carefully consider whether they truly need a data warehouse.\nThe privacy and security of your data for a data warehouse is also only as good as your\ncloud services, so for smaller businesses, data may not be safe. If a corporation\u2019s warehouse is\naccessed and leaks customer information, it could be terrible for the company. It would give out\npossibly customers\u2019 credit card information and damage the company\u2019s reputation. Although\nthere are many things that can go wrong with a data warehouse, if you know how to use one\ncorrectly the positives outweigh the negatives.\nThere are many ways to create a data warehouse and several different ways to upload all\nthe information quickly. First, consider all of the data from each individual source: for example,\nall data from the cash registers, online sales, and company sales. Next, remove all of the\nredundant data, so there is no repetition to corrupt the information provided. Lastly, reorganize\nall of the data obtained into a consistent format so that it can all be queried. A query is a request\nfor information from a specific table inside of a database.\nThere are three main types of data warehouses. First is the Enterprise Data Warehouse,\nwhich is a central database. It has decision support services. Its approach is unified for keeping\nthe data in the warehouse organized, which helps present the data easier. Users can also sort the\ndata more easily according to category.\nNext, we have the Operational Data Store. The Operational Data Store (ODS) is nothing\nbut data being stored for when there is no organization needed. ODS is refreshed in real time. It\nis highly recommended to use ODS over the other two methods for more simple things like\nstoring employees\u2019 hours or pay to keep things simpler.\nThe last form of data warehouse is a Data Mart. Data marts are basically just a subset of\nthe actual data from the data warehouse. It was made precisely for sales and financing businesses.\nIf the data mart is self-regulating, then data can be composed straight from the founding source.\nBasically, any data warehouse that is mostly used for money-related purposes should be created\nas a data mart.\nThere are multiple different components of a data warehouse. First, the Load Manager is\nalso known as the \u201cfront component\u201d of the warehouse. It is called the front component because it works with the main extraction of data to load it all into the data warehouse. Next we have the\nWarehouse Manager, which is used to manage the data inside of the warehouse. It helps to\ninvestigate the data inside the warehouse to make sure it stays consistent throughout. The Query\nManager is another key component to the warehouse, its main job being to manage the queries\nfor the warehouse. Since it manages the queries of the warehouse it is also known by some as\nthe \u201cbackend component.\u201d Lastly, we have the end-user access tools, which are assembled into\nfive different categories. The first category is responsible for reporting the warehouse data to\nmanagement. The second category is used to store the tools for the queries. The third category\nis for tools that help application development. The fourth category is for EIS tools. Lastly, the\nfifth category is for OLAP and data mining tools.\nNext, we discuss the architecture of a data warehouse. A simple data warehouse design\nis where all the different forms of data are stored in the central repository of the date warehouse.\nThe repository receives information from each source and then is used for data analysis and\nmining. Next we have simple architecture design with a staging area included. All of the non-\nrequired data must be prepared before going to the warehouse, because only the necessary data\nis wanted. The staging part of the warehouse prepares data before it actually goes into the data\nwarehouse. The next form is called hub-and-spoke warehousing. It works similarly to a staging\narea, but instead adds a data mart after the central repository to further customize the data\nwarehouse, which may be needed in certain types of business applications. After the data is\nsorted, cleaned, and ready to use, it is moved into the responding data mart. Lastly, sandboxes\nare very private and protected data stores, which make them very efficient and allow new ways\nof analyzing the data sets without having to follow the basic rules of the data warehouse. Many tools and utilities are required to effectively use a data warehouse. These can be\nvery useful when navigating the warehouse. Data Extraction is used to get data from several\ndifferent outside sources and present them. Data Cleaning tools can also be very useful for\nfinding the errors inside of the data set, even correcting them for the user. This can also be used\nto get rid of duplicate data. Data Transformation tools are used for converting the format type of\nthe data sets. For example, if the date is in a legacy format, it can easily be transformed to\nwarehouse standards. Data Loading is used mostly for sorting and checking reliability of data.\nThe refresh tool is just for simply updating the sources into the warehouse format.\nThere are three main ways to test a data warehouse. The first method is called Unit\nTesting and consists of testing each individual part of the warehouse in turn. This test is usually\ndone by the developer. Next is Integration Testing, in which different parts of the application are\nformed into one, then tested compared to the number of inputs put in. This method is mainly\nused to make sure all of the parts work together after combining them. Lastly, System Testing\ntests all the data in the entire data warehouse together. This the final check to make sure that\neverything is working together as a final product. This kind of testing is the testing done by the\nwhole team.\nMost organizations have a plethora of data but cannot access it effectively and efficiently.\nThere are multiple reasons why there is a knowledge gap between so many organizations. The\nfirst reason is because organizations have a fragmented way in which they created their\ninformation systems and databases. Because these organizations have time constraints and\nresource constraints, they have been developing information systems one at a time. This creates\ninconsistent and uncoordinated databases. Databases are usually based on different purchased\napplications, software platforms, and hardware that may have been brought in from a variety of\norganizational acquisitions, mergers, and reorganizations. From these circumstances, it can be\nvery difficult or nearly impossible for managers to find and use accurate information that has to\nbe synthesized across different systems.\nMost systems are created to help operational processing, in which there is little to no\nthought is given to information and analytical tools needed to make decisions. Operation\nprocessing, also known as transactional processing, takes, stores, and changes data to help daily\noperations of an organization. It usually focuses on optimizing access to a small set of data that\nrelates to a specific transaction\u2014for example, a customer, an order, and associated product data.\nInformation processing is an analysis of data or other forms of data to help decision making.\nLarge swaths of data are needed to derive information, such as sales of total products, across\nseveral years, from all sales regions. Systems that are mostly developed internally or bought\nfrom outside vendors were designed to help operational processing, and very little thought is\ngiven to information processing.\nThe next trend is that multiple systems are not synchronized. It may be difficult, maybe\nimpossible, to make separate databases consistent. Even if the metadata are controlled and\ncreated by only one data administrator, the values of data for the same attributes may not agree.\nThat is because of a difference in update cycles and of the separate places where the same data\nis captured for all systems. Therefore, to get a single view of the organization, the data from\nseparate systems has to be periodically separated and synchronized into one additional database.\nMany organizations use some form of a balanced scorecard-metrics, which show\norganization results in customer satisfaction, product quality, human, financial, and other terms\nsimultaneously. To make sure that this multidimensional view of the organization shows\nconsistent results, a warehouse of data is necessary. When questions rise on the balanced\nscorecard, analytical software that the data warehouse may be used to \u201cslice and dice,\u201d \u201cdrill\ndown,\u201d visualize, and in many other ways mine business intelligence. The next trend is customer relationship management. This is when organizations in all sections are realizing there is value\nin having a total picture of interactions with customers across all of the touch points. For\nexample, for a bank, the touch points are ATMs, online banking, electronic fund transfers, tellers,\nloans, and investment portfolio management, all supported by consolidated operational systems.\nTherefore, without having a data warehouse, a teller does not know to try to cross-sell a customer\none of the bank\u2019s mutual funds if the large, atypical automatic deposit transaction shows up on\nthe teller\u2019s screen. To have a total picture of the activity by a given customer requires a\nconsolidation of data from many different operational systems.\nAnother trend is supplier relationship management. The process of managing the supply\nchain has become critical in raising product quality and reducing costs for many organizations.\nOrganizations desire to make strategic supplier partnerships that are based on a total picture of\nactivities and suppliers, from billing, to the meeting of delivery dates, to support, to pricing, to\nquality control. Data about these different activities may be locked inside separate operational\nsystems: for example, accounts payable, shipping and receiving, maintenance, and product\nscheduling. ERP systems also have improved this situation by bringing much of this data into a\nsingle database. However, many ERP systems tend to be designed to optimize operational,\ninstead of informational or analytical, processing.\nThere is a need to separate informational and operational systems. An operational system\nmust be a system which is used to run a business in actual time, based on current data. Some\nexamples of operational systems are sales order, patient registration systems, and reservation\nsystems. Operational systems have to process large volumes of relatively simple write\/read\ntransactions and provide fast responses. Operational systems can also be called systems of\nrecord. Informational systems were designed to support decision making based on historical\nprediction and point-in-time data. Also, they were designed for data-mining applications or\ncomplex queries. Some examples of informational systems would be customer segmentation,\nsystems for sales trend analysis, and human resources planning.\nThe main differences between informational and operational systems are defined by six\nkey characteristics. These characteristics are primary purpose, type of data, primary users, scope\nof usage, design goal, and volume. For the first characteristic, the primary purpose of an\noperational system is to run the business on current basis, but for informational systems, the\nprimary purpose is to support managerial decision making. The second characteristic is type of\ndata. The type of data that operational systems use is a current representation of the state of the\nbusiness. The type of data that informational systems use is historical point-in-time, snapshots,\nand predictions. The third key characteristic is the primary user. The primary users of operational\nsystems are administrators, clerks, and salespersons. The primary users of informational systems\nare managers, customers, and business analysts. The fourth key characteristic of the differences\nis the scope of usage. The scope of usage for operational systems is planned, narrow, and simple\nupdates and queries. The scope of usage for informational systems is ad hoc, broad, and complex\nqueries and analysis. The fifth key characteristic the design goal. The design goal of operational\nsystems is that performance is throughput and the availability. The design goal of informational\nsystems is the ease of flexible access and use. The sixth key characteristic of the difference is\nvolume. The volume of operational systems consists of multiple constant updates and queries on\none or a few table rows. The volume of informational systems consists of a periodic batch of\nupdates and queries requiring many or all rows.\nThis shows that the two types of processing have vastly different characteristics in almost\nevery category of comparison. What is particularly noticeable is that they have very different\ncommunities of users, because operational systems are used by salespersons, administrators,\nclerks, and others who need to process business transactions, while informational systems are used by executives, business analysts, managers, and increasingly by customers who are in\nsearch of status information or those who are decision makers.\nThe need to separate informational systems and operational systems is based on three\nkey factors. The first factor is that a data warehouse tries to centralize data that is scattered\nthroughout different operational systems and makes them easily available for decision support\napplications. The second factor is that a properly designed data warehouse can add value to data\nby increasing their quality and consistency. The third factor is that a separated data warehouse\nnegates much of the contention for resources that would result when informational applications\nare competing with operational processing.\nThe success of data warehousing is not guaranteed. Data warehousing projects fail about\nforty percent of the time. This is because warehousing data is complex and requires cooperation\nand synchronization across an organization. For example, when errors become discovered in\ndata that is loaded into the warehouse, the correct place to fix the errors will be in the source\nsystems so bad data is not loaded again later. But the errors might be acceptable in the source\nsystem or even not considered errors by the unit of business for the source system. Many\nprofessional organizations sponsor yearly award programs to show the best data warehousing\npractices. The Data Warehousing Institute Awards is one of the most prestigious yearly award\nprograms. There are many impressive winners from this award program. One of these winners\nis Continental Airlines, which won the award for the best enterprise data warehouse. The\ncontinental data warehouse had an actual-time architecture and had automated data\ntransformations. What this did was simplify consolidated data from various source systems. A\ncross-unit-business system steering committee developed standard data definitions, also known\nas metadata. The uses of and changes to the warehouse have to be justified by profitability and\nrevenue projections.\nEase of access is a necessity for companies that use collected data for their business.\nMany businesses function by using user data to create value for themselves or for other\ncompanies. Companies such as Google use user search data to tailor ads to the user\u2019s interest.\nThe ease of use provided by data warehouse interfaces allows for companies to perform their\ntasks more efficiently than if they had to access the data by hand. They do this by using an\nalgorithm that queries their database through the interface and then analyzes the user search\nhistory to show ads to the user that might provoke a response. Some companies just collect the\ndata and store it, selling it to advertising companies who use the data to send relevant information\nto users who fit certain criteria. These are just a couple of examples of what is possible with data\nwarehouse queries and analysis.\nThe architecture of a data warehouse is broken down into three levels; Data Sources,\nWarehouse, and users. The user-level of the data warehouse is where all of the analysis,\nreporting, and data mining happens. This is the level where most businesses operate, searching\nfor and using the data for their intended purposes. The warehouse level is where the metadata,\nsummary data, and raw data are stored. This allows for usage from the user level and for data\ndeposits from the data sources level. This is the level that receives the most traffic because it\nhandles the movement of data and the resorting after the reception and removal of data. The data\nsources level is where the data is generated, either through digital or real-world collection, and\nthen stored in the warehouse level. Each piece of data is categorized based on various criteria, depending on the type of data.\nFor example, if the data came from a financial transaction, it would be sorted based on date,\namount, sender, receiver, and status. The data is then put with data that has the same criteria,\ntypically sorted by date. Once the data is stored it can be easily retrieved and aggregated into a\nlist of data that all matches a list of requirements for analysis. This allows for the data to be easily\naccessed and sorted.\nThese warehouses hold information that has become important to the function of most\ncompanies, schools, banks, militaries, and governments. Data warehouses store information\nabout equipment purchases, student class lists, transaction history, payment history, payroll,\ninventory listings, and employee information. Without efficient, organized ways to store all this\ninformation, companies and organizations wouldn\u2019t be able to function. Stores wouldn\u2019t be able\nto keep track of their stock so that they can remain stocked. Companies wouldn\u2019t be able to\nmanage and maintain payroll for their employees, keep track of what equipment is at what\nlocation, or what businesses placed orders for how much. Data storage, management, and\norganization have grown in importance to the point where most of modern society is dependent\non the storage and reproduction of data.\nConcise Summary\nIn today\u2019s life, data is everywhere and a part of everything. Data is generated whenever\nyou make a purchase, browse the internet, watch a video, visit a web page, or see an ad. That\ndata is collected by your internet service provider, the browser you use, and the web pages you\nvisit. Once all the data is collected, it is stored in data warehouses. These data warehouses\nmanage and maintain the data, storing it in a format that is easily accessible and searchable. The\nease of access makes the data easier to use for analysis and comparison.\nData warehousing is an extremely important component of modern business, forming the\ntechnical backbone of any given company. Data warehouses are used to store, manage, and\naccess the data that the companies use. Data warehouses process many different types of data,\nvarying from purchase data to internet ad data. Data warehouses operate with the same general\nstructure. The data sources put the data into the warehouse system, and the users access the\nwarehouse through the user level. The warehouse system allows for both the data sources and the users to access the data, helping to resolve some of the information gap between user and\nsource. Keeping track of all this data requires a particular setup in order to be efficient.\nData warehouses are created in a very particular way so that users and data sources can\ninteract with it at the same time. The physical structure of data warehouses consists of a series\nof computers connected together in such a way so that they share storage space, allowing them\nto distribute the data for easier access and storage. This system of distributed storage allows for\nthe users to access the data at the same time as the data sources, in addition to having multiple\nusers able to access the data simultaneously. These data warehouses also make it easier to\ncombine multiple data sets into one place, sorting the data sets into a format that is easily\nsearchable and accessible.\nWhile data warehouses are useful systems, allowing users to collate data and search it to\nbe processed, implementing a data warehouse is a very big project. Creating a data warehouse\nrequires a lot of time, money, and resources in order to do properly. A company will have to pay\nfor the computer hardware and networking as well as having to pay employees or contractors to\nset up the hardware. Once the hardware is set up, the company has to pay their employees to set\nup the system before it can be used. This results in a time span where they are paying for a system\nthat is not providing any return until it is complete. Depending on the size of the warehouse, this\ncan result in loss of profit versus the cost of set up.\nData warehouses are an exercise in cost-benefit analysis in most situations, usually\nending up being more beneficial in the long run. The utility of a system that automatically sorts\nthe data stored within based on input criteria is quite valuable. Once the data warehouse is set\nup, it ends up resolving a lot of problems that come from not having the sorted collection of data.\nIt allows for employees across the company, and across the country, to access the same data and\ncollaborate in the data analysis. The collaboration ends up saving the company time and effort,\neventually resulting in more work done for less effort. All in all, data warehouses expand the\navailability of data and make data manipulation significantly easier. Data warehouses are a\nnecessity for large companies that is costly to set up in the short term but is well worth the effort\nin the long term. "}